acquire the lock for the given mutex if the mutex is already locked acquire the lock for the given mutex if the mutex is already locked the current thread will be put to sleep until the lock becomes available param mutex the mutex on which to acquire the lock return the operation status public static native int lock NN long mutex NN acquire the lock for the given mutex if the mutex is already locked root ROOT acquire det lock the dobj acquire lock case mutex for det mutex the amod mutex given nmod for lock mutex mark locked if det mutex the nsubjpass locked mutex auxpass locked is advmod locked already advcl if acquire locked acquire the lock for the given mutex if the mutex is already locked root ROOT acquire det lock the dobj acquire lock case mutex for det mutex the amod mutex given nmod for lock mutex mark locked if det mutex the nsubjpass locked mutex auxpass locked is advmod locked already advcl if acquire locked the current thread will be put to sleep until the lock becomes available root ROOT put det thread the amod thread current nsubjpass put thread nsubj xsubj sleep thread aux put will auxpass put be mark sleep to xcomp put sleep mark becomes until det lock the nsubj becomes lock advcl until sleep becomes xcomp becomes available param mutex the mutex on which to acquire the lock root ROOT mutex compound mutex param det mutex the dep mutex mutex nmod on acquire mutex case which on ref mutex which mark acquire to acl relcl mutex acquire det lock the dobj acquire lock return the operation status root ROOT return det status the compound status operation dobj return status public static native int lock long mutex acquire becomes ANTONYM ANTONYM given acquire ANTONYM ANTONYM given put ANTONYM ANTONYM given will ANTONYM ANTONYM
